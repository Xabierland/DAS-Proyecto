classDiagram
    %% Activities
    class BaseActivity {
        # DrawerLayout drawerLayout
        # Toolbar toolbar
        # NavigationView navigationView
        # updateNavigationMenu()
        # setupToolbar()
        # setupDrawer()
        # handleNavigationItemSelected()
        # logoutUser()
        # applyLanguage()
        # applyTheme()
    }
    
    class MainActivity {
        - LibroRepository libroRepository
        - UsuarioRepository usuarioRepository
        - RecyclerView recyclerViewRecommended
        - LibroAdapter recommendedAdapter
        + onCreate()
        - loadRecommendedBooks()
    }
    
    class BookDetailActivity {
        - BookInfoFragment bookInfoFragment
        - BookActionsFragment bookActionsFragment
        - LibroRepository libroRepository
        - BibliotecaRepository bibliotecaRepository
        - Libro libro
        + onCreate()
        - loadBookData()
    }
    
    class ProfileActivity {
        - UsuarioRepository usuarioRepository
        - BibliotecaRepository bibliotecaRepository
        - RecyclerView recyclerViewReading
        - RecyclerView recyclerViewToRead
        - RecyclerView recyclerViewRead
        - BookCardAdapter readingAdapter
        - BookCardAdapter toReadAdapter
        - BookCardAdapter readAdapter
        + onCreate()
        - loadBooks()
    }
    
    class SearchActivity {
        - LibroRepository libroRepository
        - UsuarioRepository usuarioRepository
        - LibroAdapter libroAdapter
        - UsuarioAdapter usuarioAdapter
        + onCreate()
        - performSearch()
    }
    
    %% Fragments
    class BookInfoFragment {
        - Libro libro
        + setLibro(Libro)
        - updateUI()
    }
    
    class BookActionsFragment {
        - boolean libroYaEnBiblioteca
        + updateUIForExistingBook(LibroConEstado)
        + updateUIForNewBook()
        - showAddToLibraryDialog()
    }
    
    %% Adapters
    class LibroAdapter {
        - List~Libro~ libros
        + onCreateViewHolder()
        + onBindViewHolder()
    }
    
    class BookCardAdapter {
        - List~LibroConEstado~ books
        - boolean showProgress
        + onCreateViewHolder()
        + onBindViewHolder()
    }
    
    class UsuarioAdapter {
        - List~Usuario~ usuarios
        + onCreateViewHolder()
        + onBindViewHolder()
    }
    
    %% Entities & Models
    class Libro {
        - int id
        - String titulo
        - String autor
        - String isbn
        - String descripcion
        - String portadaUrl
        - int anioPublicacion
        - String editorial
        - String genero
        - int numPaginas
    }
    
    class Usuario {
        - int id
        - String nombre
        - String email
        - String password
        - String fotoPerfil
        - long fechaRegistro
    }
    
    class UsuarioLibro {
        - int id
        - int usuarioId
        - int libroId
        - String estadoLectura
        - boolean esFavorito
        - Float calificacion
        - Long fechaInicioLectura
        - Long fechaFinLectura
        - Integer paginaActual
        - String notas
    }
    
    class LibroConEstado {
        - int id
        - String titulo
        - String autor
        - String estadoLectura
        - boolean esFavorito
        - Float calificacion
        - Integer paginaActual
        + int getProgresoLectura()
        + boolean estaCompletado()
    }
    
    %% DAOs
    class LibroDao {
        + long insertarLibro(Libro)
        + List~Long~ insertarLibros(List~Libro~)
        + int actualizarLibro(Libro)
        + int eliminarLibro(Libro)
        + Libro obtenerLibroPorId(int)
        + List~Libro~ obtenerTodosLosLibros()
        + List~Libro~ buscarLibros(String)
    }
    
    class UsuarioDao {
        + long insertarUsuario(Usuario)
        + int actualizarUsuario(Usuario)
        + int eliminarUsuario(Usuario)
        + Usuario obtenerUsuarioPorId(int)
        + Integer autenticarUsuario(String, String)
    }
    
    class UsuarioLibroDao {
        + long insertarUsuarioLibro(UsuarioLibro)
        + int actualizarUsuarioLibro(UsuarioLibro)
        + List~LibroConEstado~ obtenerLibrosPorEstado(int, String)
        + int cambiarEstadoLectura(int, int, String)
        + int actualizarCalificacion(int, int, float)
    }
    
    %% Repositories
    class LibroRepository {
        - LibroDao libroDao
        - ExecutorService executorService
        + void insertarLibro(Libro, DataCallback)
        + void buscarLibros(String, DataCallback)
        + void obtenerTodosLosLibros(DataCallback)
    }
    
    class UsuarioRepository {
        - UsuarioDao usuarioDao
        - ExecutorService executorService
        + void registrarUsuario(Usuario, DataCallback)
        + void autenticarUsuario(String, String, DataCallback)
        + void obtenerUsuarioPorId(int, DataCallback)
    }
    
    class BibliotecaRepository {
        - UsuarioLibroDao usuarioLibroDao
        - ExecutorService executorService
        + void agregarLibro(int, int, String, DataCallback)
        + void obtenerLibrosPorEstado(int, String, DataCallback)
        + void obtenerLibrosLeyendo(int, DataCallback)
    }
    
    %% Database
    class AppDatabase {
        + UsuarioDao usuarioDao()
        + LibroDao libroDao()
        + UsuarioLibroDao usuarioLibroDao()
        + static AppDatabase getInstance(Context)
    }
    
    class DatabaseInitializer {
        + static RoomDatabase.Callback getDatabaseCreationCallback()
        + static void precargarBaseDeDatos(Context)
    }
    
    %% Utils
    class ImageLoader {
        + static void loadImage(String, ImageView)
    }
    
    class NotificationUtils {
        + static void createNotificationChannel(Context)
        + static void showRegistrationSuccessNotification(Context, String)
    }
    
    class FileUtils {
        + static File createTempImageFile(Context)
        + static File saveBitmapToFile(Context, Bitmap, String)
    }
    
    %% Relationships
    BaseActivity <|-- MainActivity
    BaseActivity <|-- BookDetailActivity
    BaseActivity <|-- ProfileActivity
    BaseActivity <|-- SearchActivity
    
    BookDetailActivity *-- BookInfoFragment
    BookDetailActivity *-- BookActionsFragment
    
    MainActivity o-- LibroAdapter
    SearchActivity o-- LibroAdapter
    SearchActivity o-- UsuarioAdapter
    ProfileActivity o-- BookCardAdapter
    
    LibroAdapter o-- Libro
    UsuarioAdapter o-- Usuario
    BookCardAdapter o-- LibroConEstado
    
    BookInfoFragment o-- Libro
    BookActionsFragment o-- LibroConEstado
    
    LibroRepository o-- LibroDao
    UsuarioRepository o-- UsuarioDao
    BibliotecaRepository o-- UsuarioLibroDao
    
    MainActivity o-- LibroRepository
    BookDetailActivity o-- LibroRepository
    BookDetailActivity o-- BibliotecaRepository
    ProfileActivity o-- BibliotecaRepository
    ProfileActivity o-- UsuarioRepository
    SearchActivity o-- LibroRepository
    SearchActivity o-- UsuarioRepository
    
    AppDatabase *-- LibroDao
    AppDatabase *-- UsuarioDao
    AppDatabase *-- UsuarioLibroDao
    AppDatabase -- DatabaseInitializer
